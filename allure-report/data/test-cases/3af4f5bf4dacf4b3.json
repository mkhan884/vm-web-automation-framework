{"uid":"3af4f5bf4dacf4b3","name":"Sign Up Flow - 1 Month","fullName":"tests.test_001#test_sign_up_flow","historyId":"645440255b0a513ba9abef0317b5fc0c","time":{"start":1752581667773,"stop":1752581701396,"duration":33623},"description":"This test verifies the web sign up flow for a 1 month product","descriptionHtml":"<p>This test verifies the web sign up flow for a 1 month product</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //text()=\"Google Pay\"] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//text()=\"Google Pay\"]' is not a valid XPath expression.\n  (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n0   chromedriver                        0x0000000105288e6c cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000105280d74 cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x0000000104dd23ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000104dd80a0 cxxbridge1$string$len + 114380\n4   chromedriver                        0x0000000104dda3e4 cxxbridge1$string$len + 123408\n5   chromedriver                        0x0000000104dda48c cxxbridge1$string$len + 123576\n6   chromedriver                        0x0000000104e19114 cxxbridge1$string$len + 380736\n7   chromedriver                        0x0000000104e5a934 cxxbridge1$string$len + 649056\n8   chromedriver                        0x0000000104e0d834 cxxbridge1$string$len + 333408\n9   chromedriver                        0x000000010524bf88 cxxbridge1$str$ptr + 2473268\n10  chromedriver                        0x000000010524f1f4 cxxbridge1$str$ptr + 2486176\n11  chromedriver                        0x000000010522d9d0 cxxbridge1$str$ptr + 2348924\n12  chromedriver                        0x000000010524fab0 cxxbridge1$str$ptr + 2488412\n13  chromedriver                        0x000000010521ea60 cxxbridge1$str$ptr + 2287628\n14  chromedriver                        0x000000010526f9a0 cxxbridge1$str$ptr + 2619212\n15  chromedriver                        0x000000010526fb2c cxxbridge1$str$ptr + 2619608\n16  chromedriver                        0x00000001052809b0 cxxbridge1$str$ptr + 2688860\n17  libsystem_pthread.dylib             0x000000019e91ec0c _pthread_start + 136\n18  libsystem_pthread.dylib             0x000000019e919b80 thread_start + 8","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb0ddd8db0576f782c202a0c8b9dbfae\")>\n\n    @allure.title(\"Sign Up Flow - 1 Month\")\n    @allure.description(\"This test verifies the web sign up flow for a 1 month product\")\n    def test_sign_up_flow(driver):\n        driver.get(\"https://www.virginmobile.ae\")\n        home_page = HomePage(driver)\n        home_page.verify_page_load()\n        service_type_page = home_page.click_join_us()\n        service_type_page.verify_service_type_page_load()\n        plan_selection_page = service_type_page.click_mobile_plan_btn()\n        plan_selection_page.verify_plan_selection_page_load()\n        plan_selection_page.change_plan()\n        promo_page = plan_selection_page.click_continue_btn()\n        promo_page.verify_promo_page()\n        number_selection_page = promo_page.click_monthly_btn()\n        number_selection_page.verify_number_selection_page()\n        account_creation_page = number_selection_page.click_confirm()\n        account_creation_page.verify_account_creation_page()\n        id_type_page = account_creation_page.create_account(\"mobile\")\n        id_type_page.verify_id_page()\n        address_page = id_type_page.select_id()\n        address_page.verify_address_page()\n        delivery_details_page = address_page.enter_address()\n        delivery_details_page.verify_delivery_details_page()\n        checkout_page = delivery_details_page.enter_address()\n        checkout_page.verify_checkout_page()\n        payment_page = checkout_page.agree_and_proceed()\n>       payment_page.verify_payment_page()\n\ntests/test_001.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/payment_page.py:21: in verify_payment_page\n    google = self.find(self.GOOGLE_PAY)\npages/base_page.py:10: in find\n    return self.wait.until(EC.visibility_of_element_located(locator))\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1042af1d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...00019e91ec0c _pthread_start + 136\\\\n18  libsystem_pthread.dylib             0x000000019e919b80 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //text()=\"Google Pay\"] because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//text()=\"Google Pay\"]' is not a valid XPath expression.\nE         (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000105288e6c cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x0000000105280d74 cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x0000000104dd23ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x0000000104dd80a0 cxxbridge1$string$len + 114380\nE       4   chromedriver                        0x0000000104dda3e4 cxxbridge1$string$len + 123408\nE       5   chromedriver                        0x0000000104dda48c cxxbridge1$string$len + 123576\nE       6   chromedriver                        0x0000000104e19114 cxxbridge1$string$len + 380736\nE       7   chromedriver                        0x0000000104e5a934 cxxbridge1$string$len + 649056\nE       8   chromedriver                        0x0000000104e0d834 cxxbridge1$string$len + 333408\nE       9   chromedriver                        0x000000010524bf88 cxxbridge1$str$ptr + 2473268\nE       10  chromedriver                        0x000000010524f1f4 cxxbridge1$str$ptr + 2486176\nE       11  chromedriver                        0x000000010522d9d0 cxxbridge1$str$ptr + 2348924\nE       12  chromedriver                        0x000000010524fab0 cxxbridge1$str$ptr + 2488412\nE       13  chromedriver                        0x000000010521ea60 cxxbridge1$str$ptr + 2287628\nE       14  chromedriver                        0x000000010526f9a0 cxxbridge1$str$ptr + 2619212\nE       15  chromedriver                        0x000000010526fb2c cxxbridge1$str$ptr + 2619608\nE       16  chromedriver                        0x00000001052809b0 cxxbridge1$str$ptr + 2688860\nE       17  libsystem_pthread.dylib             0x000000019e91ec0c _pthread_start + 136\nE       18  libsystem_pthread.dylib             0x000000019e919b80 thread_start + 8\n\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidSelectorException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1752581666315,"stop":1752581667772,"duration":1457},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"This test verifies the web sign up flow for a 1 month product","status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //text()=\"Google Pay\"] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//text()=\"Google Pay\"]' is not a valid XPath expression.\n  (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n0   chromedriver                        0x0000000105288e6c cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000105280d74 cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x0000000104dd23ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000104dd80a0 cxxbridge1$string$len + 114380\n4   chromedriver                        0x0000000104dda3e4 cxxbridge1$string$len + 123408\n5   chromedriver                        0x0000000104dda48c cxxbridge1$string$len + 123576\n6   chromedriver                        0x0000000104e19114 cxxbridge1$string$len + 380736\n7   chromedriver                        0x0000000104e5a934 cxxbridge1$string$len + 649056\n8   chromedriver                        0x0000000104e0d834 cxxbridge1$string$len + 333408\n9   chromedriver                        0x000000010524bf88 cxxbridge1$str$ptr + 2473268\n10  chromedriver                        0x000000010524f1f4 cxxbridge1$str$ptr + 2486176\n11  chromedriver                        0x000000010522d9d0 cxxbridge1$str$ptr + 2348924\n12  chromedriver                        0x000000010524fab0 cxxbridge1$str$ptr + 2488412\n13  chromedriver                        0x000000010521ea60 cxxbridge1$str$ptr + 2287628\n14  chromedriver                        0x000000010526f9a0 cxxbridge1$str$ptr + 2619212\n15  chromedriver                        0x000000010526fb2c cxxbridge1$str$ptr + 2619608\n16  chromedriver                        0x00000001052809b0 cxxbridge1$str$ptr + 2688860\n17  libsystem_pthread.dylib             0x000000019e91ec0c _pthread_start + 136\n18  libsystem_pthread.dylib             0x000000019e919b80 thread_start + 8","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb0ddd8db0576f782c202a0c8b9dbfae\")>\n\n    @allure.title(\"Sign Up Flow - 1 Month\")\n    @allure.description(\"This test verifies the web sign up flow for a 1 month product\")\n    def test_sign_up_flow(driver):\n        driver.get(\"https://www.virginmobile.ae\")\n        home_page = HomePage(driver)\n        home_page.verify_page_load()\n        service_type_page = home_page.click_join_us()\n        service_type_page.verify_service_type_page_load()\n        plan_selection_page = service_type_page.click_mobile_plan_btn()\n        plan_selection_page.verify_plan_selection_page_load()\n        plan_selection_page.change_plan()\n        promo_page = plan_selection_page.click_continue_btn()\n        promo_page.verify_promo_page()\n        number_selection_page = promo_page.click_monthly_btn()\n        number_selection_page.verify_number_selection_page()\n        account_creation_page = number_selection_page.click_confirm()\n        account_creation_page.verify_account_creation_page()\n        id_type_page = account_creation_page.create_account(\"mobile\")\n        id_type_page.verify_id_page()\n        address_page = id_type_page.select_id()\n        address_page.verify_address_page()\n        delivery_details_page = address_page.enter_address()\n        delivery_details_page.verify_delivery_details_page()\n        checkout_page = delivery_details_page.enter_address()\n        checkout_page.verify_checkout_page()\n        payment_page = checkout_page.agree_and_proceed()\n>       payment_page.verify_payment_page()\n\ntests/test_001.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/payment_page.py:21: in verify_payment_page\n    google = self.find(self.GOOGLE_PAY)\npages/base_page.py:10: in find\n    return self.wait.until(EC.visibility_of_element_located(locator))\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:156: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1042af1d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...00019e91ec0c _pthread_start + 136\\\\n18  libsystem_pthread.dylib             0x000000019e919b80 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //text()=\"Google Pay\"] because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//text()=\"Google Pay\"]' is not a valid XPath expression.\nE         (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000105288e6c cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x0000000105280d74 cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x0000000104dd23ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x0000000104dd80a0 cxxbridge1$string$len + 114380\nE       4   chromedriver                        0x0000000104dda3e4 cxxbridge1$string$len + 123408\nE       5   chromedriver                        0x0000000104dda48c cxxbridge1$string$len + 123576\nE       6   chromedriver                        0x0000000104e19114 cxxbridge1$string$len + 380736\nE       7   chromedriver                        0x0000000104e5a934 cxxbridge1$string$len + 649056\nE       8   chromedriver                        0x0000000104e0d834 cxxbridge1$string$len + 333408\nE       9   chromedriver                        0x000000010524bf88 cxxbridge1$str$ptr + 2473268\nE       10  chromedriver                        0x000000010524f1f4 cxxbridge1$str$ptr + 2486176\nE       11  chromedriver                        0x000000010522d9d0 cxxbridge1$str$ptr + 2348924\nE       12  chromedriver                        0x000000010524fab0 cxxbridge1$str$ptr + 2488412\nE       13  chromedriver                        0x000000010521ea60 cxxbridge1$str$ptr + 2287628\nE       14  chromedriver                        0x000000010526f9a0 cxxbridge1$str$ptr + 2619212\nE       15  chromedriver                        0x000000010526fb2c cxxbridge1$str$ptr + 2619608\nE       16  chromedriver                        0x00000001052809b0 cxxbridge1$str$ptr + 2688860\nE       17  libsystem_pthread.dylib             0x000000019e91ec0c _pthread_start + 136\nE       18  libsystem_pthread.dylib             0x000000019e919b80 thread_start + 8\n\n/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidSelectorException","steps":[{"name":"Verify that the homepage loaded correctly","time":{"start":1752581672027,"stop":1752581672059,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click join us on the homepage","time":{"start":1752581672059,"stop":1752581672620,"duration":561},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify that the service type page has loaded correctly","time":{"start":1752581672620,"stop":1752581673685,"duration":1065},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Select mobile plan in the sign up flow","time":{"start":1752581673685,"stop":1752581674913,"duration":1228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify plan selection page.","time":{"start":1752581674913,"stop":1752581675953,"duration":1040},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Change the plan and verify that the correct amount is reflected in the plan price","time":{"start":1752581675953,"stop":1752581678117,"duration":2164},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click continue btn on the plan selection page","time":{"start":1752581678117,"stop":1752581678190,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify that the promo page is loaded","time":{"start":1752581678190,"stop":1752581679264,"duration":1074},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click monthly plan on the promo screen","time":{"start":1752581679264,"stop":1752581679335,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify number selection page heading, confirm/reject btn and MNP link","time":{"start":1752581679335,"stop":1752581680442,"duration":1107},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Select confirm btn","time":{"start":1752581680442,"stop":1752581680500,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify that the account creation page has loaded and header / btn is displayed.","time":{"start":1752581680500,"stop":1752581682595,"duration":2095},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Create an account using a randomly generated email","time":{"start":1752581682595,"stop":1752581687124,"duration":4529},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"account_type","value":"'mobile'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify ID type page","time":{"start":1752581687124,"stop":1752581687191,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Select EID as the ID option","time":{"start":1752581687191,"stop":1752581687244,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify the address page header, searchbar and map","time":{"start":1752581687244,"stop":1752581687832,"duration":588},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter delivery address in search bar.","time":{"start":1752581687832,"stop":1752581698993,"duration":11161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify delivery details page header and building options","time":{"start":1752581698994,"stop":1752581699011,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter the address details and click continue","time":{"start":1752581699011,"stop":1752581699634,"duration":623},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify all payment elements are loaded and displayed on the screen","time":{"start":1752581699634,"stop":1752581700224,"duration":590},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Agree to terms and proceed to payment","time":{"start":1752581700225,"stop":1752581701355,"duration":1130},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify payment page header, credit/debit, google pay and POD","time":{"start":1752581701355,"stop":1752581701392,"duration":37},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //text()=\"Google Pay\"] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//text()=\"Google Pay\"]' is not a valid XPath expression.\n  (Session info: chrome=138.0.7204.101); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n0   chromedriver                        0x0000000105288e6c cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000105280d74 cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x0000000104dd23ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x0000000104dd80a0 cxxbridge1$string$len + 114380\n4   chromedriver                        0x0000000104dda3e4 cxxbridge1$string$len + 123408\n5   chromedriver                        0x0000000104dda48c cxxbridge1$string$len + 123576\n6   chromedriver                        0x0000000104e19114 cxxbridge1$string$len + 380736\n7   chromedriver                        0x0000000104e5a934 cxxbridge1$string$len + 649056\n8   chromedriver                        0x0000000104e0d834 cxxbridge1$string$len + 333408\n9   chromedriver                        0x000000010524bf88 cxxbridge1$str$ptr + 2473268\n10  chromedriver                        0x000000010524f1f4 cxxbridge1$str$ptr + 2486176\n11  chromedriver                        0x000000010522d9d0 cxxbridge1$str$ptr + 2348924\n12  chromedriver                        0x000000010524fab0 cxxbridge1$str$ptr + 2488412\n13  chromedriver                        0x000000010521ea60 cxxbridge1$str$ptr + 2287628\n14  chromedriver                        0x000000010526f9a0 cxxbridge1$str$ptr + 2619212\n15  chromedriver                        0x000000010526fb2c cxxbridge1$str$ptr + 2619608\n16  chromedriver                        0x00000001052809b0 cxxbridge1$str$ptr + 2688860\n17  libsystem_pthread.dylib             0x000000019e91ec0c _pthread_start + 136\n18  libsystem_pthread.dylib             0x000000019e919b80 thread_start + 8\n\n","statusTrace":"  File \"/opt/homebrew/lib/python3.11/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/muhammadkhan/Desktop/Web Automation/pages/payment_page.py\", line 21, in verify_payment_page\n    google = self.find(self.GOOGLE_PAY)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/muhammadkhan/Desktop/Web Automation/pages/base_page.py\", line 10, in find\n    return self.wait.until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py\", line 156, in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 748, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/homebrew/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":22,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1752581701428,"stop":1752581701706,"duration":278},"status":"passed","steps":[],"attachments":[{"uid":"d48eb9563791fc8c","name":"failure_screenshot","source":"d48eb9563791fc8c.png","type":"image/png","size":99937}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_001"},{"name":"host","value":"Muhammads-MacBook-Air.local"},{"name":"thread","value":"66064-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_001"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"3af4f5bf4dacf4b3.json","parameterValues":[]}